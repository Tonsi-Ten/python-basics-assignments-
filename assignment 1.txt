1. In the below elements which of them are values or an expression? eg:- values can be
integer or string and expressions will be mathematical operators.
*          ----->    expression    
'hello'    ----->    string 
-87.8      ----->    floating-point number.
-          ----->    subtraction operator.
/          ----->    division operator. 
+          ----->    addition operator. 
6          ----->    integer 


2. What is the difference between string and variable?

String --->  String is data type used to represent any sequence of characters enclosed in 
             quotes('' , "" and ''' ''') which includes letter, numbers,symbol,digits etc. 
               
Variable --->  A variable is the name given to a memory location in a program it acts like 
               containers that hold different types of data including numbers, strings, or 
               other data structures. 
               
3. Describe three different data types.

  I. Integer (int) ---> The integer data type represents whole number both positive and negative 
                        without any factional parts. and support arithmetic operations like addition,   
                        subtraction, multiplication, and division.
                        Example: x = 42, y = -10, z = 0
                      
  II. Boolean (bool) ---> The boolean data type represents a binary value that can be either True or 
                         False. this is used to ferform logical operation in python.
                         example:  is_valid = True, is_active = False
                        
                        
  III. floating-point number (float) ---> In Python, a floating-point number is a data type used to represent
                                        real numbers with a decimal point. It allows numbers with fractional
                                        parts. 
                                        Example: 63.2 , -54.71 , 0.0001 , 5465875445455.0 , etc.  
      
4. What is an expression made up of? What do all expressions do?

---> An expression in python is made up of various components like Literals, Variables, Operators, 
     Function Calls, Parentheses and its main purpose is to compute a value. Expressions can be 
     simple or complex, and they are used to perform calculations.
     
     What do all expressions do?
     
     Compute Values ---> The purpose of an expression is to compute a value. For example,
                         in the expression 2 + 3 the + operator computes the sum of 2 and 3 resulting 
                         in the value 5.
                         
     Evaluate Conditions ---> Expressions are often used to evaluate conditions in control structures like
                              'if' statements. The condition is an expression that determines the path 
                              the program takes based on whether it evaluates to True or False.                   
    
     Manipulate Data ---> Expressions are used to manipulate data. For instance, you can concatenate strings,                            
                           perform mathematical calculations, or modify variables using expressions.

    Create Complex Logic ---> Complex expressions can involve multiple operators and function calls, 
                              allowing you to create intricate logic to solve various problems.


5. This assignment statements, like spam = 10. What is the difference between an expression and a statement? 

---> Expression produces a value: Expressions are used to compute and yield a value, and they can be used
     wherever a value is expected.

---> Statement performs an action: Statements are used to perform actions, control the flow of a program,
     or define program structure.

     In example spam = 10 is a statement. It's an assignment statement that assigns the value 10 to the
     variable spam. The right side of the assignment could be an expression, like 10, which is an expression 
     that evaluates to the value 10.

6. After running the following code, what does the variable bacon contain?
   bacon = 22
   bacon + 1
   ---> After running the code the variable bacon will contain 23.

7. What should the values of the following two terms be?

  I. 'spam' + 'spamspam' --->  'spamspamspam'

  II. 'spam' * 3 ---> 'spamspamspam'

8. Why is eggs a valid variable name while 100 is invalid?
 
   ---> Variable names in Python must start with a letter (a-z, A-Z) or an underscore ( _ ).
        After the initial character, variable names can contain letters, numbers, and underscores.
        ariable names cannot start with a digit (0-9).
        
        eggs is valid because it starts with a letter and consists of letters only.
        100 is invalid because it starts with a digit, which violates the rules for variable naming in Python.

9. What three functions can be used to get the integer, floating-point number, or string
   version of a value?
   
   ---> A number can be converted into a string and vice versa (if possible) there are  three functions
        to convert one data type to into another.
        
        I.  String Conversion: str(12)             => "12"        # int to srt conversion 
        II. Integer Conversion: int("12")          => 12          # str to int conversion 
        III. Floating-Point Conversion: float(12)  => 12.0        # int to float conversion 


10. Why does this expression cause an error? How can you fix it?
   'I have eaten' + 99 + 'burritos'

   ---> The expression 'I have eaten' + 99 + 'burritos' causes an error because you are trying to concatenate a        
         string ('I have eaten') with an integer (99). to fix it we first need to convert 99 into string.
    
        a = 'i have eaten' + str(99) + 'burritos'
       
          








